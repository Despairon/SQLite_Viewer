#ifndef FORM_H
#define FORM_H
#include <QMainWindow>
#include <QAction>
#include <QMenuBar>
#include <QMessageBox>
#include "SQLiteDB.h"
#include <QFileDialog>
#include <QDialog>
#include <QPushButton>
#include <QTableWidget>
#include <QLabel>
#include <QSpinBox>
#include <QLayout>
#include <QLineEdit>


namespace Ui // autogenerated for some purpose "something"
{
class Form;
}

class Menu : public QMainWindow // main menu class. Obviously :D
{
    Q_OBJECT
public:
    Menu(QMenuBar*, Ui::Form*);
public slots:
    void Create_db(); // Creates database
    void Open_db(); // Opens database
    void Save_db(); // Saves current database
    void Add_r(); // adds a row to the table
    void Del_r(); // removes selected row from the table
private:
    Ui::Form *ui;
    SQLiteDB db;
};

class Form : public QMainWindow // generated automatically
{
    Q_OBJECT

public:
    explicit Form(QWidget *parent = 0);
    ~Form();
private:
    Ui::Form *ui;
    Menu *_menu;
};

class DialogForDBCreation : QObject // this class is dedicated to make dialog window
{                                   // when you press menu item "Create database"
    Q_OBJECT
public slots:
    void onColCountChange(); // slots, that react to dialog window items signals
    bool onCreateDBBtn();
    void onCancelBtn();
public:
    QDialog *wnd;
    DialogForDBCreation();
    ~DialogForDBCreation(){}
    DBTemplate templ8;
    static int SpnBxPrevVal; // needs to track spinbox value changing
private:
    QPushButton *btn1;
    QPushButton *btn2; // widgets
    QSpinBox *spnbx1;
    QLabel *lbl1;
    QLabel *lbl2;
    QLabel *lbl3;
    QLabel *lbl4;
    QLineEdit *lnedit1;
    QLineEdit *lnedit2;
    QTableWidget *tblwdgt;
};

class DialogForDBOpening : QObject // this class is dedicated to make dialog window
{                                  // when you press menu item "Open database"
    Q_OBJECT                       // this dialog windows appears when database that is being opened
public slots:                      // contains more than one table
    bool onOkBtn();
    void onCancelBtn();
public:
    QDialog *wnd;
    DialogForDBOpening(QStringList);
    ~DialogForDBOpening(){}
    QString table_name;
private:
    QPushButton *btn1;
    QPushButton *btn2; // widgets
    QLabel *lbl;
    QTableWidget *tblwdgt;
};

class DialogSave : QObject // this dialog box is for saving current db if user tries to open another one
{
    Q_OBJECT
public slots:
    void onOkBtn();
    void onCancelBtn();
public:
    QDialog *wnd;
    DialogSave();
    ~DialogSave(){}
private:
    QPushButton *btn1;
    QPushButton *btn2; // widgets
    QLabel *lbl;
};
#endif // FORM_H
